# --- Cleanup prior initialization transient services ---
# Ignore failures for cases where the service does not yet exist
- name: Stop k3s-init
  systemd:
    name: k3s-init
    state: stopped
  failed_when: false

# k3s-init won't work if the port is already in use (failed_when: false - ignore errors)
- name: Stop k3s
  systemd:
    name: k3s
    state: stopped
  failed_when: false

- name: Clean previous runs of k3s-init  # noqa command-instead-of-module
  # The systemd module does not support "reset-failed", so we need to resort to command.
  command: systemctl reset-failed k3s-init
  failed_when: false
  changed_when: false

# --- Deploy vip (VIP allocates virtual ip to control nodes and can be thought of as a LB for control nodes) --- ------------
- name: Deploy vip manifest
  include_tasks: vip.yml

- name: Deploy kube-vip manifest
  include_tasks: kube-vip.yml
  tags: kubevip

# Initialization with systemd-run (transient service) and parameters - `extra_server_args, server_init_args`
- name: Init cluster inside the transient k3s-init service
  command:
    cmd: "systemd-run -p RestartSec=2 \
                      -p Restart=on-failure \
                      --unit=k3s-init \
                      k3s server {{ server_init_args }}"
    creates: "{{ systemd_dir }}/k3s-init.service"

# Verify all control nodes have joined the cluster and save k3s init logs
- name: Verification
  when: not ansible_check_mode
  block:
    - name: Verify that all nodes actually joined (check k3s-init.service if this fails)
      command:
        cmd: k3s kubectl get nodes -l "node-role.kubernetes.io/master=true" -o=jsonpath="{.items[*].metadata.name}"
      register: nodes
      until: nodes.rc == 0 and (nodes.stdout.split() | length) == (groups[k3s_cn_group_name | default('k3s_control_nodes')] | length)  # yamllint disable-line rule:line-length
      retries: 45
      delay: 10
      changed_when: false
  always:
    - name: Save logs of k3s-init.service
      include_tasks: fetch_k3s_init_logs.yml
    - name: Kill the temporary service used for initialization
      systemd:
        name: k3s-init
        state: stopped
      failed_when: false

